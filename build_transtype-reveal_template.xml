<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:dita="http://dita-ot.sourceforge.net" name="dita2reveal">
    
    
    <!-- ==================================================
         Extension Points
    -->
    <extension-point id="org.doctales.reveal.param" name="Custom parameters"/>
    
    
    <!-- ================================================== 
        Targets
    -->
    
    <target name="dita2reveal" 
            depends="reveal.init,
                     reveal.download.reveal.js,
                     html5.init,
                     build-init,
                     preprocess,
                     html5.topic,
                     html5.map,
                     html5.css,
                     dita.topics.html.reveal,
                     reveal.copy.css,
                     reveal.copy.reveal.js,
                     reveal.copy.jquery,
                     reveal.replace.index.html"/>
    
    <target name="reveal.download.reveal.js">
        <mkdir dir="${revealCacheDir}"/>
        <get
            verbose="on"
            src="${revealDownloadUrl}"
            dest="${revealCacheDir}"
            skipexisting="true"/>
        <unzip
            src="${revealCacheDir}${file.separator}${revealArchiveName}"
            dest="${revealCacheDir}"/>
    </target>
    
    <target name="reveal.init">
        <!-- Download URL of the reveal.js archive. -->
        <property name="revealDownloadUrl" value="https://github.com/hakimel/reveal.js/archive/3.2.0.zip"/>
        
        <!-- Filename of the reveal.js archive. -->
        <property name="revealArchiveName" value="3.2.0.zip"/>
        
        <!-- Directory name of reveal.js that is stored in the downloaded archive. -->
        <property name="revealDirectoryName" value="reveal.js-3.2.0"/>
        
        <!-- HTML version. Property is required by DITA-OT2.x -->
        <property name="html-version" value="html5"/>
        
        <!-- File extension of the output files -->
        <property name="args.outext" value="html"/>
        
        <!-- Cache directory for reveal.js files. -->
        <condition property="revealCacheDir" value="${user.home}/AppData/Local/DITA/org.doctales.reveal">
            <os family="windows"/>
        </condition>
        <condition property="revealCacheDir" value="/tmp/DITA/org.doctales.reveal">
            <os family="unix"/>
        </condition>
        
        <!--<property name="revealCacheDir" value="${user.home}${file.separator}.ditaToRevealJSCache"/>-->
        
        <!-- Do not generate releated links -->
        <property name="args.rellinks" value="none"/>
        
        <!-- Do not generate a nav-toc (HTML5) -->
        <property name="nav-toc" value="none"/>
        <property name="args.xsl" value="${dita.plugin.org.doctales.reveal.dir}/xsl/reveal.xsl"/>
        
        <property name="root-chunk-override" value="to-content"/> 
        
        <property name="root-chunk-override" value="to-content"/>
        <condition property="args.reveal.theme" value="simple">
            <not>
                <isset property="args.reveal.theme"/>
            </not>
        </condition>
        <condition property="args.reveal.controls" value="true">
            <not>
                <isset property="args.reveal.controls"/>
            </not>
        </condition>
        <condition property="args.reveal.progress" value="true">
            <not>
                <isset property="args.reveal.progress"/>
            </not>
        </condition>
        <condition property="args.reveal.slidenumber" value="false">
            <not>
                <isset property="args.reveal.slidenumber"/>
            </not>
        </condition>
        <condition property="args.reveal.history" value="false">
            <not>
                <isset property="args.reveal.history"/>
            </not>
        </condition>
        <condition property="args.reveal.keyboard" value="true">
            <not>
                <isset property="args.reveal.keyboard"/>
            </not>
        </condition>
        <condition property="args.reveal.overview" value="true">
            <not>
                <isset property="args.reveal.overview"/>
            </not>
        </condition>
        <condition property="args.reveal.center" value="true">
            <not>
                <isset property="args.reveal.center"/>
            </not>
        </condition>
        <condition property="args.reveal.touch" value="true">
            <not>
                <isset property="args.reveal.touch"/>
            </not>
        </condition>
        <condition property="args.reveal.loop" value="false">
            <not>
                <isset property="args.reveal.loop"/>
            </not>
        </condition>
        <condition property="args.reveal.rtl" value="false">
            <not>
                <isset property="args.reveal.rtl"/>
            </not>
        </condition>
        <condition property="args.reveal.fragments" value="true">
            <not>
                <isset property="args.reveal.fragments"/>
            </not>
        </condition>
        <condition property="args.reveal.embedded" value="false">
            <not>
                <isset property="args.reveal.embedded"/>
            </not>
        </condition>
        <condition property="args.reveal.autoslide" value="0">
            <not>
                <isset property="args.reveal.autoslide"/>
            </not>
        </condition>
        <condition property="args.reveal.autoslidestoppable" value="true">
            <not>
                <isset property="args.reveal.autoslidestoppable"/>
            </not>
        </condition>
        <condition property="args.reveal.mousewheel" value="false">
            <not>
                <isset property="args.reveal.mousewheel"/>
            </not>
        </condition>
        <condition property="args.reveal.hideaddressbar" value="true">
            <not>
                <isset property="args.reveal.hideaddressbar"/>
            </not>
        </condition>
        <condition property="args.reveal.previewlinks" value="false">
            <not>
                <isset property="args.reveal.previewlinks"/>
            </not>
        </condition>
        <condition property="args.reveal.transition" value="default">
            <not>
                <isset property="args.reveal.transition"/>
            </not>
        </condition>
        <condition property="args.reveal.transitionspeed" value="default">
            <not>
                <isset property="args.reveal.transitionspeed"/>
            </not>
        </condition>
        <condition property="args.reveal.backgroundtransition" value="default">
            <not>
                <isset property="args.reveal.backgroundtransition"/>
            </not>
        </condition>
        <condition property="args.reveal.viewdistance" value="3">
            <not>
                <isset property="args.reveal.viewdistance"/>
            </not>
        </condition>
        <condition property="args.reveal.width" value="960">
            <not>
                <isset property="args.reveal.width"/>
            </not>
        </condition>
        <condition property="args.reveal.height" value="700">
            <not>
                <isset property="args.reveal.height"/>
            </not>
        </condition>
        <condition property="args.reveal.margin" value="0.1">
            <not>
                <isset property="args.reveal.heimarginght"/>
            </not>
        </condition>
        <condition property="args.reveal.minScale" value="0.2">
            <not>
                <isset property="args.reveal.minScale"/>
            </not>
        </condition>
        <condition property="args.reveal.maxScale" value="1.5">
            <not>
                <isset property="args.reveal.maxScale"/>
            </not>
        </condition>
        <condition property="args.reveal.generate.vertical.slides" value="true">
            <not>
                <isset property="args.reveal.generate.vertical.slides"/>
            </not>
        </condition>
        
        <condition property="reveal.css-and-theme-used">
            <and>
                <isset property="args.reveal.css"/>
                <isset property="args.reveal.theme"/>
            </and>
        </condition>
        
        <antcall target="reveal.theme-match.css"/>
        
    </target>

    <target name="reveal.theme-match.css" if="reveal.css-and-theme-used">
        <basename property="reveal.css.filename" file="${args.reveal.css}" suffix=".css" />
        <fail message="Property &quot;args.reveal.theme&quot; does not match &quot;args.reveal.css&quot;">
            <condition>
                <and>
                    <not>
                        <equals arg1="${args.reveal.css}" arg2="null"/>
                    </not>
                    <not>
                        <equals arg1="${args.reveal.theme}" arg2="${reveal.css.filename}"/>
                    </not>
                </and>
            </condition>
        </fail>
    </target>
    
    <!-- XSLT transformation -->
    <!--<target name="dita.topics.xhtml.reveal" depends="dita.xhtml.init" description="Build XHTML output from dita inner and outer topics,which will adjust the directory.">-->
    <target name="dita.topics.html.reveal" description="Build XHTML output from dita inner and outer topics,which will adjust the directory.">
        <xslt basedir="${dita.temp.dir}"
            destdir="${output.dir}"
            includesfile="${dita.temp.dir}${file.separator}${fullditatopicfile}"
            reloadstylesheet="${dita.xhtml.reloadstylesheet}"
            classpathref="dost.class.path"
            extension=".html"
            style="${dita.plugin.org.doctales.reveal.dir}/xsl/reveal.xsl"
            filenameparameter="FILENAME"
            filedirparameter="FILEDIR">
            <excludesfile name="${dita.temp.dir}${file.separator}${resourceonlyfile}" if="resourceonlyfile"/>
            <includesfile name="${dita.temp.dir}${file.separator}${chunkedtopicfile}" if="chunkedtopicfile"/>
            <xmlcatalog refid="dita.catalog"/>
            
            <param name="TRANSTYPE" expression="${transtype}"/>
            <param name="DITAEXT" expression="${dita.ext}" if="dita.ext"/>
            <param name="FILTERFILE" expression="${dita.input.valfile.url}" if="dita.input.valfile"/>
            <param name="CSS" expression="${args.css.file}" if="args.css.file"/>
            <param name="CSSPATH" expression="${user.csspath}" if="user.csspath"/>
            <param name="HDF" expression="${args.hdf}" if="args.hdf"/>
            <param name="HDR" expression="${args.hdr}" if="args.hdr"/>
            <param name="FTR" expression="${args.ftr}" if="args.ftr"/>
            <param name="DRAFT" expression="${args.draft}" if="args.draft"/>
            <param name="ARTLBL" expression="${args.artlbl}" if="args.artlbl"/>
            <param name="GENERATE-TASK-LABELS" expression="${args.gen.task.lbl}" if="args.gen.task.lbl"/>
            <param name="PRESERVE-DITA-CLASS" expression="${args.xhtml.classattr}" if="args.xhtml.classattr"/>
            <param name="NOPARENTLINK" expression="${args.hide.parent.link}" if="args.hide.parent.link"/>
            <param name="include.rellinks" expression="${include.rellinks}"/>
            <param name="BREADCRUMBS" expression="${args.breadcrumbs}" if="args.breadcrumbs"/>
            <param name="INDEXSHOW" expression="${args.indexshow}" if="args.indexshow"/>
            <param name="genDefMeta" expression="${args.gen.default.meta}" if="args.gen.default.meta"/>
            <param name="OUTEXT" expression=".${args.outext}" if="out.ext"/>
            <param name="BASEDIR" expression="${basedir}"/>
            <param name="OUTPUTDIR" expression="${output.dir}"/>
            <param name="DBG" expression="${args.debug}" if="args.debug"/>
            <param name="DEFAULTLANG" expression="${args.default.language}" if="args.default.language"/>
            
            <!-- reveal.js parameters -->
            <param name="args.reveal.css" expression="${args.reveal.css}" if="args.reveal.css"/>
            <param name="args.reveal.theme" expression="${args.reveal.theme}" if="args.reveal.theme"/>
            <param name="args.reveal.controls" expression="${args.reveal.controls}" if="args.reveal.controls"/>
            <param name="args.reveal.progress" expression="${args.reveal.progress}" if="args.reveal.progress"/>
            <param name="args.reveal.slidenumber" expression="${args.reveal.slidenumber}" if="args.reveal.slidenumber"/>
            <param name="args.reveal.history" expression="${args.reveal.history}" if="args.reveal.history"/>
            <param name="args.reveal.keyboard" expression="${args.reveal.keyboard}" if="args.reveal.keyboard"/>
            <param name="args.reveal.overview" expression="${args.reveal.overview}" if="args.reveal.overview"/>
            <param name="args.reveal.center" expression="${args.reveal.center}" if="args.reveal.center"/>
            <param name="args.reveal.touch" expression="${args.reveal.touch}" if="args.reveal.touch"/>
            <param name="args.reveal.loop" expression="${args.reveal.loop}" if="args.reveal.loop"/>
            <param name="args.reveal.rtl" expression="${args.reveal.rtl}" if="args.reveal.rtl"/>
            <param name="args.reveal.fragments" expression="${args.reveal.fragments}" if="args.reveal.fragments"/>
            <param name="args.reveal.embedded" expression="${args.reveal.embedded}" if="args.reveal.embedded"/>
            <param name="args.reveal.autoslide" expression="${args.reveal.autoslide}" if="args.reveal.autoslide"/>
            <param name="args.reveal.autoslidestoppable" expression="${args.reveal.autoslidestoppable}" if="args.reveal.autoslidestoppable"/>
            <param name="args.reveal.mousewheel" expression="${args.reveal.mousewheel}" if="args.reveal.mousewheel"/>
            <param name="args.reveal.hideaddressbar" expression="${args.reveal.hideaddressbar}" if="args.reveal.hideaddressbar"/>
            <param name="args.reveal.previewlinks" expression="${args.reveal.previewlinks}" if="args.reveal.previewlinks"/>
            <param name="args.reveal.transition" expression="${args.reveal.transition}" if="args.reveal.transition"/>
            <param name="args.reveal.transitionspeed" expression="${args.reveal.transitionspeed}" if="args.reveal.transitionspeed"/>
            <param name="args.reveal.backgroundtransition" expression="${args.reveal.backgroundtransition}" if="args.reveal.backgroundtransition"/>
            <param name="args.reveal.viewdistance" expression="${args.reveal.viewdistance}" if="args.reveal.viewdistance"/>
            <param name="args.reveal.parallaxbackgroundimage" expression="${args.reveal.parallaxbackgroundimage}" if="args.reveal.parallaxbackgroundimage"/>
            <param name="args.reveal.parallaxbackgroundsize" expression="${args.reveal.parallaxbackgroundsize}" if="args.reveal.parallaxbackgroundsize"/>
            <param name="args.reveal.width" expression="${args.reveal.width}" if="args.reveal.width"/>
            <param name="args.reveal.height" expression="${args.reveal.height}" if="args.reveal.height"/>
            <param name="args.reveal.margin" expression="${args.reveal.margin}" if="args.reveal.margin"/>
            <param name="args.reveal.minScale" expression="${args.reveal.minScale}" if="args.reveal.minScale"/>
            <param name="args.reveal.maxScale" expression="${args.reveal.maxScale}" if="args.reveal.maxScale"/>
            <param name="args.reveal.generate.vertical.slides" expression="${args.reveal.generate.vertical.slides}" if="args.reveal.generate.vertical.slides"/>
        </xslt>
    </target>
    
    <target name="reveal.copy.css" if="args.reveal.css">
        <echo level="info">Copy ${args.reveal.css} to ${output.dir}${file.separator}css${file.separator}theme</echo>
        <copy file="${args.reveal.css}" todir="${output.dir}${file.separator}css${file.separator}theme" failonerror="false"/>
    </target>
    
    <target name="reveal.copy.reveal.js">
        <copy todir="${output.dir}" failonerror="true">
            <fileset dir="${revealCacheDir}${file.separator}${revealDirectoryName}"/>
        </copy>
    </target>
    
    <target name="reveal.copy.jquery">
        <copy file="${dita.plugin.org.doctales.reveal.dir}/js/jquery-1.11.3.min.js" todir="${output.dir}${file.separator}js" failonerror="true"/>
    </target>
    
    <target name="reveal.replace.index.html">
        <delete file="${output.dir}${file.separator}index.html"/>
        <move file="${output.dir}${file.separator}${dita.map.filename.root}.html" tofile="${output.dir}${file.separator}index.html"/>
        <delete dir="${output.dir}${file.separator}test"/>
    </target>

</project>
